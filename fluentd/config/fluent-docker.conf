<filter docker.var.lib.docker.containers.*.*.log>
  @type docker_metadata
  labels com.docker.stack.namespace:namespace,com.docker.swarm.service.name:service_name,com.docker.swarm.node.id:node_id
</filter>

<match docker.var.lib.docker.containers.*.*.log>
  @type rewrite_tag_filter
  <rule>
    key container_name
    pattern ^(.+)busylogbox(.+)$
    tag row.busylogbox.dlog.$1
  </rule>
  <rule>
    key container_name
    pattern ^(.+)errbit(.+)$
    tag single.errbit.dlog.$1
  </rule>
  <rule>
    key container_name
    pattern ^(.+)_(elastic|kibana|fluent)(.+)$
    tag ignore.dlog.$1
  </rule>
</match>

<match ignore.**>
  @type null
</match>

<match single.errbit.**>
  @type record_reformer
  tag multiline.${tag_suffix[1]}
  renew_record false
  enable_ruby true
  <record>
    request_id ${record['log'].scan(/^., \[.+\]( )+[^ ]+ -- : \[(?<request_id>[^ ]+)\]/).flatten.compact[0]}
    message ${record['log'].gsub(/^$\n/, '')}
  </record>
</match>

<filter multiline.**>
   @type concat
   key message
   multiline_start_regexp /^(E|F), \[[^ ]+ \#\d+\]( )+[^ ]+ -- :/
   continuous_line_regexp /^(?!(^., \[[^ ]+ \#\d+\]( )+[^ ]+ -- :)).+/
   flush_interval 60
   timeout_label @MULTILINE_LOGS
</filter>

<filter multiline.**>
  @type concat
  key message
  stream_identity_key request_id
  multiline_start_regexp /^I, \[.+\]  INFO -- : \[.+\] Started.+for.+at.+/
  flush_interval 60
  timeout_label @MULTILINE_LOGS
</filter>

<match **>
  @type relabel
  @label @MULTILINE_LOGS
</match>
